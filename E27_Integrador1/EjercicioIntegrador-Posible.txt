//Para poder detectar el gen Z, se representa la muestra como una matriz cuadrada (MxM) y se busca en las dos diagonales principales que todas las bases sean iguales.
Algoritmo EjercicioIntegrador1
	Definir muestra, matrizMuestra Como Caracter
	Definir M, longMuestra Como Entero
	
	Escribir "Ingrese la muestra"
	Leer muestra
	
	// Ejemplo muestra 37x37 con gen Z
	//muestra = "ABDCBDCBDABDADCBDABCBDABCDBADBCDABCDAAADCBDCBDABDADCBDABCBDABCDBADBCDABCABABACBDCBDABDADCBDABCBDABCDBADBCDABADBABDABDCBDABDADCBDABCBDABCDBADBCDAACDBABDCADCBDABDADCBDABCBDABCDBADBCDABCDBABDCBACBDABDADCBDABCBDABCDBADBCAABCDBABDCBDABDABDADCBDABCBDABCDBADBADABCDBABDCBDDADABDADCBDABCBDABCDBADACDABCDBABDCBDCBAABDADCBDABCBDABCDBAABCDABCDBABDCBDCBDABDADCBDABCBDABCDBADBCDABCDBABDCBDCBDAADADCBDABCBDABCDAADBCDABCDBABDCBDCBDABAADCBDABCBDABCABADBCDABCDBABDCBDCBDABDAACBDABCBDABADBADBCDABCDBABDCBDCBDABDAADBDABCBDAACDBADBCDABCDBABDCBDCBDABDADAADABCBDABCDBADBCDABCDBABDCBDCBDABDADCAAABCBAABCDBADBCDABCDBABDCBDCBDABDADCBADBCADABCDBADBCDABCDBABDCBDCBDABDADCBDAAABDABCDBADBCDABCDBABDCBDCBDABDADCBDDABBDABCDBADBCDABCDBABDCBDCBDABDADCBDABACDABCDBADBCDABCDBABDCBDCBDABDADCBAABCADABCDBADBCDABCDBABDCBDCBDABDADCADABCBADBCDBADBCDABCDBABDCBDCBDABDADABDABCBDAACDBADBCDABCDBABDCBDCBDABDAACBDABCBDAABDBADBCDABCDBABDCBDCBDABDADCBDABCBDABACBADBCDABCDBABDCBDCBDABAADCBDABCBDABCADADBCDABCDBABDCBDCBDAADADCBDABCBDABCDAADBCDABCDBABDCBDCBDABDADCBDABCBDABCDBAABCDABCDBABDCBDCBAABDADCBDABCBDABCDBAABCDABCDBABDCBDCADABDADCBDABCBDABCDBADADDABCDBABDCBDABDABDADCBDABCBDABCDBADBACABCDBABDCBACBDABDADCBDABCBDABCDBADBCABBCDBABDCADCBDABDADCBDABCBDABCDBADBCDAACDBABDABDCBDABDADCBDABCBDABCDBADBCDAADDBABACBDCBDABDADCBDABCBDABCDBADBCDABACBAADCBDCBDABDADCBDABCBDABCDBADBCDABCADABDCBDCBDABDADCBDABCBDABCDBADBCDABCDA"
	
	//Ejemplo muestra 37x37 sin gen z
	//muestra = "ABDCBDCBDABDADCBDABCBDABCDBADBCDABCDDAADCBDCBDABDADCBDABCBDABCDBADBCDABCDBABACBDCBDABDADCBDABCBDABCDBADBCDABDDBABDABDCBDABDADCBDABCBDABCDBADBCDADCDBABDCADCBDABDADCBDABCBDABCDBADBCDDBCDBABDCBACBDABDADCBDABCBDABCDBADBCDABCDBABDCBDABDABDADCBDABCBDABCDBADBDDABCDBABDCBDDADABDADCBDABCBDABCDBADDCDABCDBABDCBDCBAABDADCBDABCBDABCDBADBCDABCDBABDCBDCBDABDADCBDABCBDABCDBDDBCDABCDBABDCBDCBDAADADCBDABCBDABCDDADBCDABCDBABDCBDCBDABAADCBDABCBDABCDBADBCDABCDBABDCBDCBDABDAACBDABCBDABDDBADBCDABCDBABDCBDCBDABDAADBDABCBDADCDBADBCDABCDBABDCBDCBDABDADAADABCBDDBCDBADBCDABCDBABDCBDCBDABDADCAAABCBDABCDBADBCDABCDBABDCBDCBDABDADCBADBCDDABCDBADBCDABCDBABDCBDCBDABDADCBDAADBDABCDBADBCDABCDBABDCBDCBDABDADCBDDABBDABCDBADBCDABCDBABDCBDCBDABDADCBDDBACDABCDBADBCDABCDBABDCBDCBDABDADCBDABCADABCDBADBCDABCDBABDCBDCBDABDADCDDABCBADBCDBADBCDABCDBABDCBDCBDABDADDBDABCBDAACDBADBCDABCDBABDCBDCBDABDADCBDABCBDAABDBADBCDABCDBABDCBDCBDABDDDCBDABCBDABACBADBCDABCDBABDCBDCBDABDADCBDABCBDABCADADBCDABCDBABDCBDCBDADDADCBDABCBDABCDAADBCDABCDBABDCBDCBDDBDADCBDABCBDABCDBAABCDABCDBABDCBDCBDABDADCBDABCBDABCDBAABCDABCDBABDCBDCDDABDADCBDABCBDABCDBADADDABCDBABDCBDDBDABDADCBDABCBDABCDBADBACABCDBABDCBDCBDABDADCBDABCBDABCDBADBCABBCDBABDCDDCBDABDADCBDABCBDABCDBADBCDAACDBABDDBDCBDABDADCBDABCBDABCDBADBCDAADDBABDCBDCBDABDADCBDABCBDABCDBADBCDABACBADDCBDCBDABDADCBDABCBDABCDBADBCDABCADDBDCBDCBDABDADCBDABCBDABCDBADBCDABCDA"
	longMuestra = Longitud(muestra)
	// Para que la muestra sea válida el orden de la matriz (el valor de M) debe ser 3×3, 4×4 o 37×37
	Si longMuestra == 9 o longMuestra == 16 o longMuestra == 1369 //37X37
		M = Raiz(longMuestra) //Raiz para calcular el número de la muestra
		Dimension matrizMuestra[M,M]		
		llenarMatriz(muestra, matrizMuestra, M)
		imprimiMatriz(matrizMuestra, M)
		Escribir "La matriz contiene el gen z: ", recorrerDiagonalesPrincipales(matrizMuestra, M)
	SiNo
		Escribir "La longitud de la cadena no es válida, debe ser 3x3, 9x9 o 37x37"
	FinSi
FinAlgoritmo

SubProceso llenarMatriz(muestra, matriz, M)
	Definir i, j, contador Como Entero
	contador = 0
	para i = 0 Hasta M-1
		para j = 0 Hasta M-1
			matriz[i,j] <- Subcadena(muestra, contador, contador)
			contador = contador +1
		FinPara
	FinPara
FinSubProceso

	Funcion contieneElGenZ = recorrerDiagonalesPrincipales(matriz, M)
		Definir contieneElGenZ Como Logico
		Definir i, j Como Entero
		Definir baseAnteriorDiagonalP, baseAnteriorDiagonalS Como Caracter
		
		baseAnteriorDiagonalP = matriz[0,0]
		baseAnteriorDiagonalS = matriz[0,M-1]
		contieneElGenZ = Verdadero
		
		Escribir ""
		para i = 0 hasta M -1
			//Posicion Diagonal Principal, diagonal Secundaria
			Si matriz[i, i] <> baseAnteriorDiagonalP O matriz[i, M -1 -i] <> baseAnteriorDiagonalS 
				contieneElGenZ = Falso
				i = M //ciclo se rompe 
			FinSi
		FinPara
	FinFuncion

SubProceso imprimiMatriz(matriz, M)
	Definir i, j Como Entero
	Para i = 0 Hasta M -1
		Escribir Sin Saltar "|  "
		para j = 0 Hasta M -1
			Escribir Sin Saltar matriz[i,j], "  "
		FinPara
		Escribir "|"
	FinPara
FinSubProceso